{"mappings":"AAAA;AACA,WAAW;AACX,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,MAAM,WAAW,SAAS,aAAa,CAAC;AACxC,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,SAAS,SAAS,aAAa,CAAC;AACtC,MAAM,YAAY,OAAO,qBAAqB,GAAG,MAAM;AAEvD,MAAM,SAAS;IACX,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,+BAA+B;IAC/B,SAAS;QACL,QAAQ,SAAS,CAAC,MAAM,CAAC;QACzB,QAAQ,KAAK,CAAC,GAAG,GAAG,YAAY,KAAK;QACrC,QAAQ,SAAS,CAAC,MAAM,CAAC;QACzB,SAAS,SAAS,CAAC,MAAM,CAAC;QAC1B,KAAK,SAAS,CAAC,MAAM,CAAC;IAC1B;IACA,qBAAqB;IACrB,QAAQ,gBAAgB,CAAC,SAAS;AACtC;AAEA,MAAM,UAAU;IACZ,QAAQ,GAAG,CAAC;IAEZ,oCAAoC;IACpC,MAAM,YAAY,SAAU,OAAO;QAC/B,MAAM,CAAC,MAAM,GAAG;QAChB,QAAQ,GAAG,CAAC;IAEZ,0DAA0D;IAC1D,uCAAuC;IAC3C;IAEA,MAAM,iBAAiB,IAAI,qBAAqB,WAAW;QACvD,MAAM;QACN,WAAW;QACX,YAAY,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC;IACjC;IAEA,eAAe,OAAO,CAAC;AAC3B;AAEA,iBAAiB;AACjB,OAAO,gBAAgB,CAAC,QAAQ;IAC5B,IAAI,OAAO,UAAU,IAAI,KACrB;SAEA;AAER;AACA,OAAO,gBAAgB,CAAC,UAAU;IAC9B,IAAI,OAAO,UAAU,IAAI,KACrB;SAEA;AAER","sources":["javascript/index.js"],"sourcesContent":["\"use strict\"\r\n// Elements\r\nconst menuBtn = document.querySelector(\".hamburger\");\r\nconst overlay = document.querySelector(\".overlay\");\r\nconst openBtn = document.querySelector(\".hamburger-icon\");\r\nconst closeBtn = document.querySelector(\".close-icon\");\r\nconst menu = document.querySelector(\".header__menu\");\r\nconst header = document.querySelector(\".header\");\r\nconst navHeight = header.getBoundingClientRect().height;\r\n\r\nconst mobile = function () {\r\n    menu.classList.add(\"hidden\");\r\n    // Open and close menu function\r\n    function toggleMenu() {\r\n        overlay.classList.toggle(\"hidden\");\r\n        overlay.style.top = navHeight + 16 + \"px\";\r\n        openBtn.classList.toggle(\"hidden\");\r\n        closeBtn.classList.toggle(\"hidden\");\r\n        menu.classList.toggle(\"hidden\");\r\n    }\r\n    // Add Event listener\r\n    menuBtn.addEventListener(\"click\", toggleMenu);\r\n}\r\n\r\nconst desktop = function () {\r\n    console.log(\"desktop view\");\r\n\r\n    // Overlay and Intersection observer\r\n    const stickyNav = function (entries) {\r\n        const [entry] = entries;\r\n        console.log(entry);\r\n\r\n        // if (!entry.isIntersecting) nav.classList.add('sticky');\r\n        // else nav.classList.remove('sticky');\r\n    };\r\n\r\n    const headerObserver = new IntersectionObserver(stickyNav, {\r\n        root: null,\r\n        threshold: 0,\r\n        rootMargin: `-${navHeight}px`,\r\n    });\r\n\r\n    headerObserver.observe(header);\r\n}\r\n\r\n// Event Listener\r\nwindow.addEventListener(\"load\", () => {\r\n    if (window.innerWidth <= 768) {\r\n        mobile();\r\n    } else {\r\n        desktop();\r\n    }\r\n});\r\nwindow.addEventListener(\"resize\", () => {\r\n    if (window.innerWidth <= 768) {\r\n        mobile();\r\n    } else {\r\n        desktop();\r\n    }\r\n});"],"names":[],"version":3,"file":"index.29c7aa47.js.map","sourceRoot":"/__parcel_source_root/"}